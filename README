Bryant Peppers
CS4760 Operation Systems: Project 5
4/19/2020
My deadlock detection program spins off children at random intervals, which will then request or release resources based on a random number.  
Every so often, the child will regenerate this random number, and, if it is below a threshold, the child will terminate.  
The parent will also terminate the program and children if there is a ctrl-c signal, if the log file grows beyond 10 million characters, or if the time exceeds 10 seconds.  
It will also terminate if a deadlock is detected.  
Every second of simulated time, the parent will call the deadlock detection algorithm, which will step through all the children and check to see if any of them can terminate, given the current system resources and their outstanding requests.  
The parent then sends a SIGINT to the children, gives them a short time to exit gracefully and deallocate any shared memory/ message queues it may have used, and then, if they fail, sends them a SIGKILL before terminating shared memory and exiting itself.